   # etc/.vim/vimrc
" .vimrc
" ==========
" ::
"   git clone https://github.com/westurner/dotvim
"   git clone ssh://git@github.com/westurner/dotvim
"   make help
"
" Vim Reference
" ---------------
"  %          --  current filename
"  %:p        --  current filepath
"  $VIMRUNTIME      --  /{colors,syntax,macros}
"  ListMappings     --  list commented mappings
"  :map             --  list actual mappings
"  :scriptnames     --  list scripts and plugins
"  :set             --  list all nondefault options
"  e <path>         --  open file
"  e <pa...><tab>   --  open file with wildmenu completion
"  \e [...] <enter> --  open file
"  :tabnew <path>   --  open file
"  :read filename|  --  insert filename at cursor
"  :read !cmd       --  insert cmd output at cursor
"  :%! [cmd]        --  buffer > stdin > [cmd] > stdout => buffer.replace
"
"  [n]G             --  goto line #
"  g <C-g>          --  whereami
"  u                --  undo
"  ^r               --  redo
"  :%s:\(.*\):+\1:g --  Regex
"
" Modes
"  i                --  insert
"  I                --  insert at beginning of line
"  a                --  append
"  A                --  append at end of line
"  v                --  visual
"  c-v              --  visual block
"  ;;               --  command
"  <Esc>            --  command
"
" Vim Marks
"  m[a-z]{1}        --  set mark
"  `[a-z]{1}        --  goto mark
"  '[a-z]{1}        --  goto mark
"
" Macros
"  q[a-z]{1}        --  start recording
"  q                --  stop recording
"  @[a-z]{1}        --  replay macro
"  @@               --  repeat macro
"  q2<seq><esc>q;@2 --  record macro to 2 and repeat
"
" Searching
"  /<pattern>       --  search for term
"  *                --  search for term under cursor next
"  n                --  next search ocurrence
"  #                --  search for term under cursor previous
"  N                --  previous search ocurrence
"
"  :[l][vim]grep <pattern> <file>
"
"  :cl   :ll        --  list list
"  :copen :lopen    --  open list
"  :cw   :lw        --  toggle show list
"  :ccl[ose] :lcl   --  close list
"  :cn   :ln        --  next <Enter>
"  :cp   :lp        --  prev <Enter>
"  :cc!  :lc [nr]   --  jump to [nr]
"  :cfir :cla       --  first, last
"
" Yanking and Pasting
"  y[a-z]           --  yank to buffer [a-z]
"  p[a-z]           --  paste from buffer [a-z]
"  ]p               --  paste to level
"
" Indenting/Shifting Blocks
"  [n]<             --  shift block left
"  [n]>             --  shift block right
"
"
" Folding
"  :help Fold       --  also usr_28
"  :set nofen       --  stop folding
"  zf               --  create fold
"  zo               --  fold open
"  zO               --  fold open recursive
"  zc               --  fold close
"  zC               --  fold close recursive
"  zx               --  undo manual fold actions
"  zX               --  undo manual fold actions and recompute
"  zM               --  fold close all but current (focus)
"  zR               --  fold open all (review)
"
"  :Voom [format]   --  open VOom outline sidebar
"  <leader> t       --  :TagBarToggle " outline sidebar
"
" Etiquette
"  <leader> i       --  toggle unprintables
"  <leader> sd      --  toggle highlight EOL whitespace
"  <leader> sc      --  clear highlighting
"
" set window title to vim title (display full path)
" print the document path
"
"  :ListMappings    --  list .vimrc mapping comments (n(next) and p(rev))
"  <space> -- <leader>
"  ,    --  <leader> == <comma>
"  ;;   --  <esc> == double semicolon
"  jk   --  <esc>
"  98   --  <esc> == 98
"  :;   --  <esc> == colon semicolon
"  :;   --  <esc> == colon semicolon
" Quickfix
"  <leader> q               --  toggle quicklist
"  <leader> n               --  next quicklist item
"  <leader> l               --  toggle location list
" Workaround vim lp:#572863
" Code Folding
" UTF-8
" TODO XXX
" Code Indenting
" Searching
"  set colorcolumn=0    --  clear color column
" Turn Off Visual Bell
" WildMenu
" Spell Checking
"  <leader> sp           --  toggle spellcheck
"  shift-<enter>        --  insert new line w/o changing mode
    " no error bells
    " Jump to last position
    " remove trailing whitespace
    " filetype extensions
    "    if &previewwindow
    "        exec 'setlocal winheight='.&previewheight
    "    endif
    " Auto completion
    "  CTRL-<space>     --  autocomplete menu
    "  CTRL-<tab>       --  autocomplete menu
    " close vim if the only window left open is a NERDTree
    " Open NERDTree automatically if no files were specified
" Drag and Drop
"   :help drag-n-drop
"   shift-<drop>    --  cd to file's directory
"   ctrl-<drop>     --  split new window for file
"   <drop>          --  open file or paste path at cursor
" Fonts
"  :PatchFont      -- set the font
" GUI Menubar
"  :HideMenubar    -- hide GUI menubar
"  :ShowMenubar    -- show GUI menubar
"   :Set256         -- set 256 colors (for console vim)
"   :Set88          -- set 88 colors (for console vim)
" GUI
    "  Remove gui scrollbars
    "  ctrl-z   --  undo
    "  alt-z    --  undo
    "  ctrl-r   --  redo
    "  alt-r    --  redo
    "  ctrl-X   --  cut
    "  alt-x    --  cut
    "  ctrl-c   --  copy
    "  alt-c    --  copy
        " always call Set256.
        " if this causes problems with older terminals
        " :Set88
" autocmd! Syntax * syn match ExtraWhitespace /\s\+$\| \+\ze\t/
"  <leader> sd              --  match EOL whitespace
"  <leader> sc              --  clear search highlighting
"  ctrl-q       --  close
"  <leader> i   --  toggle show invisibles
"  ,cd          --  :cd %:p:h
"  T            --  wrap paragram
" Keep search matches in the middle of the window.
"  <leader> [    --  toggle cursorline and cursorcolumn
"  <leader> hm   --  set horizontal line mark
"  <leader> hv   --  set vertical column mark
"  <leader> c    --  clear virt marks
"  Tab          --  Indent Line
" map <Tab>         >gb
"  Shift-Tab    --  Dedent Line
"  ctrl-t       --  Indent Current Line
"  ctrl-d       --  Dedent Current Line
"  >            --  Visual Indent Block
"  <            --  visual dedent block
" Alternative using Tab/Shift-Tab (for gvim).
"  tab          --  shift right
"  Shift-tab    --  shift left
" vnoremap <Tab>    >gv
"  ctrl-f       --  find
"  ctrl-alt-A   --  copy all
" Paste
"  shift-insert --  paste
"  ctrl-S       --  Save
"  ctrl-Alt-W   --  Close
"  ctrl-Home    --  Goto line one
"  ctrl-End     --  Goto line :-1
" PgUp/PgDn
"  K    --  PageUp
"  J    --  PageDown
" Pgup/Down are actually 2*<c-U>
" Buffer Nav
"  ctrl-a       --  move to beginning of line (^)
"  ctrl-e       --  move to end of line ($)
" Window Nav        (window-move-cursor)
"  ctrl-j       --  cursor window down
"  ctrl-u       --  cursor window down
"  ctrl-k       --  cursor window up
"  ctrl-i       --  cursor window up
"  ctrl-l       --  cursor window right
"  ctrl-h       --  cursor window left
" Window Resize     (window-resize)
"  ctrl-w _     --  maximize window height
"  ctrw-w 1_    --  minimize window height
"  ctrl-w |     --  maximize window width
"  ctrl-w 1|    --  minimize window width
"  ctrl-w =     --  equalize window sizes
"  [n]ctrl-w >  --  expand width
"  [n]ctrl-w <  --  contract width
"  [n]ctrl-w +  --  increase height
"  [n]ctrl-w -  --  reduce height
"  ctrl-w o     --  minimze all other windows
" Window Movement (window-move)
" Window Up
"  <leader> wk  --  move window up
"  ctrl-wi      --  move window up
"  <leader> wi  --  move window up
" Window Right
"  <leader> wl  --  move window right
" Window Down
"  <leader> wj  --  move window down
"  ctrl-wu      --  move window down
"  <leader> wu  --  move window down
" Window Left
"  <leader> wj  --  move window left
" Window Rotate
"  ctrl-w R     --  rotate window up
"  ctrl-w r     --  rotate window down
" Tab Movement (tab-page-commands)
"  ctrl-Alt-h   --  previous tab
"  Alt-u        --  previous tab
"  ctrl-Alt-l   --  next tab
"  Alt-i        --  next tab
" Man.vim          --  view manpages in vim
"  :Man man        --  view manpage for 'man'
"  <leader> o      --  Open uri under cursor
    "  :Ack <term> <path>
    "  <leader>a        --  Ack
" Grin              -- Find in Python
" Ctags
"  ctrl-[           --  go to tag under cursor
"  ctrl-T           --  go back  #TODO
" sh: ctags -R -f ~/.vim/tags/python-$PYVER.ctags $PYLIBDIR
" Use :make to see syntax errors. (:cn and :cp to move around, :dist to see
" all errors)
" Colors
"  :PatchColors     --  load local colorizing postsets
" call PatchColors()    -- call PatchColors when sourced
" List highlight colors
" Python
"  Wrap at 72 chars for comments.
"  read virtualenv's site-packages to vim path
    " TODO: python regex current buffer
" Tabsetting functions
"  :Fourtabs    -- set to four (4) soft tabs (Default)
" Default to fourtabs
"  :Threetabs   -- set to three (3) soft tabs
"  :Twotabs     -- set to two (2) soft tabs
"  :Onetab      -- set to one (1) soft tab
"  :Hardtabs    -- set to hard \t tabs (e.g. for Makefiles)
"  :CurrentBuffer -- display number of current buffer
"  diff           -- vimdiff, Hgvdiff, Gdiff
"    :diffget   -- get from diff (overwrite or append)
"    do         -- :diffget other block
"    :diffput   -- put from diff (overwrite or append)
"    dp         -- :diffput block 
"
"    <C-W><C-w> -- cycle between buffers
"
"  diffget maps   -- 3-way merge buffers
"    <leader> 2   -- diffget from bufnr 2
"    <leader> 3   -- diffget from bufnr 3
"    <leader> 4   -- diffget from bufnr 4
"  :Striptrailingwhitespace -- strip spaces at the end of lines
" Adjust font-size
"  <C-Up>   -- increase font size
"  <C-Down> -- decrease font size
"  <F3>     -- insert ReST date heading
" Trac
" References
"
"   - https://dev.launchpad.net/UltimateVimPythonSetup
"   - https://github.com/kennethreitz/dotfiles/blob/master/.vimrc
"   - https://bitbucket.org/sjl/dotfiles/src/tip/vim/.vimrc#cl-716
"   - http://vim.wikia.com/wiki/Highlight_unwanted_spaces
"   - http://stackoverflow.com/questions/1551231
"   - http://superuser.com/questions/117969/is-there-a-way-to-move-a-split-page-to-a-new-tab-in-vim
"   - http://sontek.net/turning-vim-into-a-modern-python-ide
"   - http://vim.wikia.com/wiki/VimTip320
   
   
   # etc/.vim/vimrc.full.bundles.vimrc
" Bundle            -- Vim bundle manager [help bundle]
" :BundleList          - list configured plugins
" :BundleInstall(!)    - install (update) plugins
" :BundleSearch(!) foo - search (or refresh cache first) for foo
" :BundleClean(!)      - confirm (or auto-approve) removal of unused plugins
"
" The Bundle URLs are intentionally complete https URLs
" * grep '^Bundle \'' vimrc.bundles
" * sed -i 's\https://github.com/\ssh://git@github.com/\g'
" venv.vim          -- venv CdAlias commands
"  :Cdhome          -- Cd_HOME()
"  :Cdh             -- Cd_HOME()
"  :Cdwrk           -- Cd___WRK()
"  :Cddotfiles      -- Cd___DOTFILES()
"  :Cdd             -- Cd___DOTFILES()
"  :Cdprojecthome   -- Cd_PROJECT_HOME()
"  :Cdp             -- Cd_PROJECT_HOME()
"  :Cdph            -- Cd_PROJECT_HOME()
"  :Cdworkonhome    -- Cd_WORKON_HOME()
"  :Cdwh            -- Cd_WORKON_HOME()
"  :Cdve            -- Cd_WORKON_HOME()
"  :Cdcondahome     -- Cd_CONDA_HOME()
"  :Cda             -- Cd_CONDA_HOME()
"  :Cdce            -- Cd_CONDA_HOME()
"  :Cdvirtualenv    -- Cd_VIRTUAL_ENV()
"  :Cdv             -- Cd_VIRTUAL_ENV()
"  :Cdsrc           -- Cd__SRC()
"  :Cds             -- Cd__SRC()
"  :Cdwrd           -- Cd__WRD()
"  :Cdw             -- Cd__WRD()
"  :Cdbin           -- Cd__BIN()
"  :Cdb             -- Cd__BIN()
"  :Cdetc           -- Cd__ETC()
"  :Cde             -- Cd__ETC()
"  :Cdlib           -- Cd__LIB()
"  :Cdl             -- Cd__LIB()
"  :Cdlog           -- Cd__LOG()
"  :Cdpylib         -- Cd__PYLIB()
"  :Cdpysite        -- Cd__PYSITE()
"  :Cdsitepackages  -- Cd__PYSITE()
"  :Cdvar           -- Cd__VAR()
"  :Cdwww           -- Cd__WWW()
"  :Cdww            -- Cd__WWW()
" Info.vim          -- vim infopages in vim [help info]
"  :Info sed        --  view infopage for 'sed'
"  <Space>          --  Scroll forward (page down).
"  <Backspace>      --  Scroll backward (page up).
"  <Tab>            --  Move cursor to next hyperlink within this node.
"  <Enter>,<C-]>    --  Follow hyperlink under cursor.
"  ;,<C-T>          --  Return to last seen node.
"  .,>              --  Move to the "next" node of this node.
"  p,<              --  Move to the "previous" node of this node.
"  u                --  Move "up" from this node.
"  d                --  Move to "directory" node.
"  t                --  Move to the Top node.
"  <C-S>            --  Search forward within current node only.
"  s                --  Search forward through all nodes for a specified
"  string.
"  q                --  Quit browser.
"
" Signify   -- show git/hg file changes in gutter [help signify]
"  <leader>gt       -- SignifyToggle
"  <leader>gh       -- SignifyToggleHighlight
"  <leader>gr       -- SignifyRefresh
"  <leader>gd       -- SignifyDebug
" hunk jumping
"  <leader>gh       -- signify-next-hunk
"  <leader>gk       -- signify-prev-hunk
" hunk text object
"  ic               -- signify inner textobj
"  ac               -- signify outer textobj
" Fugitive      -- Git commands and statusline display [help fugitive]
" Lawrencium    -- Hg commands [help lawrencium]
" NERDTree      -- File browser [help NERDTree]
"  <Leader>e         --  toggle NERDTree
"  ctrl-e            --  toggle NERDTree
"  <Leader>E         --  open nerdtree to current file (:NERDTreeFind %:p:h)
"  ctrl-E            --  open nerdtree to current file (:NERDTreeFind %:p:h)
"  I                 --  toggle view hidden files
"  B                 --  toggle view bookmarks
"  cd                --  set vim CWD to selected dir
"  C                 --  refocus view to selected dir
"  o                 --  open
"  r                 --  refresh dir
"  R                 --  refresh root
"  t                 --  open in new tab
"  T                 --  open in new tab silently
"  u                 --  up a dir
"  U                 --  up a dir and leave open
"  x                 --  close node
"  X                 --  close all nodes recursive
"  ?                 --  toggle help
" FindInNERDTree    -- NERDTRee show current file [help NERDTreeFind]
"  <c-b>            --  toggle BufExplorer
"  ?                --  toggle BufExplorer help
"  <leader>b        --  toggle BufExplorer
" CtrlP             -- file/buffer/mru finder [help ctrlp]
"  <C-p>            -- CtrlP (fuzzy matching)
" Syntastic         -- syntax highlighting [help syntastic]
" NERDCommenter     -- commenting [help NERDCommenter]
"  ,cm              --  minimal comment
"  ,cs              --  sexy comment
"  ,c<space>        --  toggle comment
" UltiSnips         --  syntax-specific snippets [help ultisnips]
"  snippetname<C-CR>    --  insert snippet
"  <tab>            --  next placeholder
"  <tab>            --  prev placeholder
"  ~/.vim/snippets-ulti/python:
"   climain         --  new cli script
"   setuppy         --  new setup.py script
" NeoComplCache -- code completion [help neocomplcache]
" unstack.vim   -- parse and open stacktrace paths [help unstack]
"  <leader> s   -- parse part/all of a stacktrace
" accordion.vim -- work w/ a number of vsplits at once [help accordion]
" ViM Airline   -- helpful statusbar information w/ vimscript [help airline]
    " base16, wombat, luna
    " base16, wombat, luna
" EasyMotion    -- easy visual motions [help easymotion]
"  <Leader>m-w/e    --  search forward (beg/end of word)
"  <Leader>m-b      --  search backward
"  <Leader>m-j      --  search line down
"  <Leader>m-k      --  search line up
" Jellybeans    -- a good colorscheme w/ sensible diff highlighting
"  :colorscheme jellybeans -- switch to the jellybeans colorscheme
" Vim-misc      -- functions for colorscheme-switcher and vim-session
" Vim Colorscheme Switcher [help colorscheme-switcher]
"  <F8>         -- cycle colors forward
"  <Shift><F8>  -- cycle colors reverse
" HiColors
"  call HiTest() -- print highlighting colors 
" Pasting       -- make paste work normally [help paste]
" Vim Room      -- focus just the relevant text [help vimroom] 
" VOoM Outline Viewer   -- view outlines of code and text [help voom]
"  VOoM modes:  html, markdown, python, rest,
"               thevimoutliner, txt2tags,
"               viki, vimwiki, wiki
"  :Voom [<format>] -- open Voom outline tab
"  :Voom rest       -- open ReStructuredText outline
"  ggg?G
"  <leader> V   -- toggle Voom outline sidebar
" TagBar        -- source tag browser [help tagbar]
"  <leader> t   -- toggle TagBar outline sidebar"
" Vim Session   -- save and restore sessions between exits [help session]
"  :SaveSession <name>  -- save a session
"  :OpenSession <name>  -- open a saved session
"  :Restart             -- SaveSession restart && exit
"  :OpenSession restart -- open the 'restart' saved session
" Vim Unimpaired        --  moving between buffers [help unimpaired]
"  [a      :previous
"  ]a      :next
"  [A      :first
"  ]A      :last
"  [b      :bprevious
"  ]b      :bnext
"  [B      :bfirst
"  ]B      :blast
"  [l      :lprevious
"  ]l      :lnext
"  [L      :lfirst
"  ]L      :llast
"  [<C-L>  :lpfile
"  ]<C-L>  :lnfile
"  [q      :cprevious
"  ]q      :cnext
"  [Q      :cfirst
"  ]Q      :clast
"  [<C-Q>  :cpfile (Note that <C-Q> only works in a terminal if you disable
"  ]<C-Q>  :cnfile flow control: stty -ixon)
"  [t      :tprevious
"  ]t      :tnext
"  [T      :tfirst
"  ]T      :tlast
" Ack.vim       -- ack through files (instead of grep) [help ack]
" :Ack [options] PATTERN [directory]    -- search for pattern
" :AckAdd [options] PATTERN [directory] -- add a search pattern
" :AckWindow [options] PATTERN          -- search all visible buffers"
" vim-surround  -- add quotes/parenthesis/tags [help surround]
"  cs       -- change surrounding
"  ys       -- yank and surround (motion, text object)
"  yss      -- yank and surround current line
"  ds"      -- remove double-quotes
"  cs'"     -- replace single-quotes with double quotes
"  cd"<q>   -- surround with <q>...<q/>
"  dst      -- remove surrounding tag
" csapprox      -- adapt gvim colorschemes for terminal vim [help csapprox]
" UndoTree      -- visualize vim undotree
"  <F5>     -- Toggle UndoTree (? for help)
" vim-nginx -- nginx ftdetect, indent, and syntax
" n3.vim    -- N3/Turtle RDF Syntax
" SPARQL    -- SPARQL syntax
" Python-mode       -- Python [help pymode]
"  :help pymode
"  [[    --  Jump to previous class or function
"  ]]    --  Jump to next class or function
"  [M    --  Jump to previous class or method
"  ]M    --  Jump to next class or method
"  aC    --  Select a class. Ex: vaC, daC, yaC, caC
"  iC    --  Select inner class. Ex: viC, diC, yiC, ciC
"  aM    --  Select a function or method. Ex: vaM, daM, yaM, caM
"  iM    --  Select inner function or method. Ex: viM, diM, yiM, ciM
"  g:pymode_python = { 'python', 'python3', 'disable' }
"
"  set g:pymode_python 'disable' (start time, occasional completion stall)
"  <leader> d    -- open pydoc
"  :PymodeLintToggle    -- toggle lint checking
"  :PymodeLintAuto      -- autofix current buffer pep8 errors
" - auto-show an error window
" - show lint signs
" - run lint on write
"  let g:pymode_lint_ignore = ""
"  let g:pymode_lint_select = ""
"  Pymode lint line annotation symbols
"   XX = TODO
"   CC = COMMENT
"   RR = VISUAL
"   EE = ERROR
"   II = INFO
"   FF = PYFLAKES
" :PyModeLint       -- lint current buffer (once)
" :PyModeLintToggle -- toggle lint
"
" :PyModeLintAuto   -- auto-lint the current buffer (once)
"                       (commit before and after)
"
"  <F7>     -- set debugger breakpoints
"  auto lookup breakpoint cmd (pdb, ipdb, pudb)"
"  Searches upward for a .ropeproject file (that should be .vcs-ignored)
"  :PymodeRopeNewProject    -- Create a new .ropeproject in CWD
"  :PymodeRopeRegenerate    -- Regenerate rope project cache
"  <C-c>d       -- show docs for current function w/ pymode
"  rope for autocompletion
"  <C-Space>    -- rope autocomplete
"  <leader> j       --  :RopeGotoDefinition
"  <C-c> ro     -- organize Python imports; drop unused (:PymodeRopeAutoImport)
"  :PymodeRopeUndo  -- Undo last project changes
"  :PymodeRopeRedo  -- Redo last project changes
"  <C-c> rr     -- rope rename
" vim-virtualenv    -- Python virtualenv [help virtualenv]
"  :help
"  :VirtualEnvDeactivate
"  :VirtualEnvList
"  :VirtualEnvActivate <name>
"  :VirtualEnvActivate <TAB>
" Sort python imports
"  :PyFixImports    --  sort import statements
" Pytest.vim    -- py.test red/green results [help pytest]
"  :Pytest clear    -- reset pytest globals
"  :Pytest file     --  pytest file
"  :Pytest class    --  pytest class
"  :Pytest method   --  pytest method
"  :Pytest {...} --pdb  -- pytest file/class/method with pdb
"  <leader>tf       --  pytest file
"  <leader>tc       --  pytest class
"  <leader>tm       --  pytest method
"  " cycle through test errors
"  <leader>tn       --  pytest next error
"  <leader>tp       --  pytest prev error
"  <leader>te       --  pytest error
" Pyrex         -- Pyrex syntax
" Jinja         -- Jinja Templates syntax
" vim-coffee-script -- CoffeeScript syntax, indent
" vim-haml          -- HAML, SASS, SCSS
" vim-css3-syntax   -- CSS3
" vim-css-color     -- show CSS color codes
" vim-less          -- LESS CSS
" vim-jade          -- Jade templates
" os.vim   -- Operating System [help os]
" clickable.vim -- click-able links
" Bundle 'https://github.com/Rykka/clickable.vim' XXX TODO linux
" Riv.vim   -- ReStructuredText [help riv]
"  :RivIntro
"  :RivQuickStart
"  :RivPrimer
"  :RivSpecification
"  :RivCheatSheet
" let g:riv_fold_level = -1
" Salt      -- Salt syntax
" Trac      -- Trac [help trac]
" webapi-vim -- vim web API [help webapi[-{html, http, json, xml}]]
" gist-vim  -- Create a gist.github.com [help gist-vim]
" github-issues.vim     -- autocomplete, CRUD GitHub issues [help Gissues]
" html5.vim             -- HTML5, RDFa, microdata, WAI-ARIA
" vim-javascript        -- improved Javascript support
" vim-indent-guides     -- show indentation levels [help indent_guides]
" rainbow-parentheses   -- make nested parenthesis different colors
"  :RainbowParenthesesActivate
"  :RainbowParenthesesToggle
"  :RainbowParenthesesLoadRound
"  :RainbowParenthesesLoadSquare
"  :RainbowParenthesesLoadBraces
"  :RainbowParenthesesLoadChevrons
"  :RainbowParenthesesToggleAll
    " :RainbowParenthesesActivate
" l9                    -- utility library (for FuzzyFinder)
" FuzzyFinder           -- find files, buffers, tags, changes [help fuf]
"  :FufBuffer
"  :FufFile
"  :FufDir
"  :FufMruFile
"  :FufMruCmd
"  :FufTag
"  :FufJumpList
"  :FufChangeList
"  :FufQuickfix
"  :FufHelp
" abolish.vim           -- abbreviations, case-aware replcmnts [help abolish]
" fountain.vim          -- fountain.io syntax
" All of your Bundles must be added before the following line
"
   
   
   # etc/.vim/vimrc.tinyvim.bundles.vimrc
" Bundle            -- Vim bundle manager [help bundle]
" :BundleList          - list configured plugins
" :BundleInstall(!)    - install (update) plugins
" :BundleSearch(!) foo - search (or refresh cache first) for foo
" :BundleClean(!)      - confirm (or auto-approve) removal of unused plugins
"
" The Bundle URLs are intentionally complete https URLs
" * grep '^Bundle \'' vimrc.bundles
" * sed -i 's\https://github.com/\ssh://git@github.com/\g'
" Info.vim          -- vim infopages in vim [help info]
"  :Info sed        --  view infopage for 'sed'
"  <Space>          --  Scroll forward (page down).
"  <Backspace>      --  Scroll backward (page up).
"  <Tab>            --  Move cursor to next hyperlink within this node.
"  <Enter>,<C-]>    --  Follow hyperlink under cursor.
"  ;,<C-T>          --  Return to last seen node.
"  .,>              --  Move to the "next" node of this node.
"  p,<              --  Move to the "previous" node of this node.
"  u                --  Move "up" from this node.
"  d                --  Move to "directory" node.
"  t                --  Move to the Top node.
"  <C-S>            --  Search forward within current node only.
"  s                --  Search forward through all nodes for a specified
"  string.
"  q                --  Quit browser.
"
" Signify   -- show git/hg file changes in gutter [help signify]
" NERDTree      -- File browser [help NERDTree]
"  <Leader>e         --  toggle NERDTree
"  ctrl-e            --  toggle NERDTree
"  <Leader>E         --  open nerdtree to current file (:NERDTreeFind %:p:h)
"  ctrl-E            --  open nerdtree to current file (:NERDTreeFind %:p:h)
"  I                 --  toggle view hidden files
"  B                 --  toggle view bookmarks
"  cd                --  set vim CWD to selected dir
"  C                 --  refocus view to selected dir
"  o                 --  open
"  r                 --  refresh dir
"  R                 --  refresh root
"  t                 --  open in new tab
"  T                 --  open in new tab silently
"  u                 --  up a dir
"  U                 --  up a dir and leave open
"  x                 --  close node
"  X                 --  close all nodes recursive
"  ?                 --  toggle help
" FindInNERDTree   -- NERDTRee show current file [help NERDTreeFind]
"  <c-b>            --  toggle BufExplorer
"  ?                --  toggle BufExplorer help
"  <leader>b        --  toggle BufExplorer
" CtrlP             -- file/buffer/mru finder [help ctrlp]
"  <C-p>            -- CtrlP (fuzzy matching)
" Syntastic         -- syntax highlighting [help syntastic]
" EasyMotion    -- easy visual motions [help easymotion]
"  <Leader>m-w/e    --  search forward (beg/end of word)
"  <Leader>m-b      --  search backward
"  <Leader>m-j      --  search line down
"  <Leader>m-k      --  search line up
" Jellybeans    -- a good colorscheme w/ sensible diff highlighting
"  :colorscheme jellybeans -- switch to the jellybeans colorscheme
" Vim-misc      -- functions for colorscheme-switcher and vim-session
" Vim Colorscheme Switcher [help colorscheme-switcher]
"  <F8>         -- cycle colors forward
"  <Shift><F8>  -- cycle colors reverse
" vim-nginx -- nginx ftdetect, indent, and syntax
" n3.vim    -- N3/Turtle RDF Syntax
" SPARQL    -- SPARQL syntax
" Pyrex         -- Pyrex syntax
" Jinja         -- Jinja Templates syntax
" Salt      -- Salt syntax
" All of your Bundles must be added before the following line
"
   
   
