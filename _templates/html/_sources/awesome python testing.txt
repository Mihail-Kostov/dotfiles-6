########################
Awesome Python Testing
########################

`<https://en.wikipedia.org/wiki/Software_testing>`__

`<https://en.wikipedia.org/wiki/Python_(programming_language)>`__


.. contents::


Background
============

Software Testing
-------------------

https://en.wikipedia.org/wiki/Software_testing

* https://en.wikipedia.org/wiki/Test-driven_development
* `<https://en.wikipedia.org/wiki/Assertion_(computing)>`__
* http://docs.python-guide.org/en/latest/writing/tests/
* http://martinfowler.com/bliki/TestCoverage.html
* http://martinfowler.com/eaaCatalog/
* https://en.wikipedia.org/wiki/Code_coverage#Basic_coverage_criteria
* https://en.wikipedia.org/wiki/Category:Formal_methods


Unit, Functional, Integration, Acceptance
--------------------------------------------

* http://stackoverflow.com/questions/4904096/whats-the-difference-between-unit-functional-acceptance-and-integration-test
* http://stackoverflow.com/questions/520064/what-is-unit-test-integration-test-smoke-test-regression-test


Workflow Evolution
----------------------
::

    1. edit, edit, commit
    2. edit, commit
    3. todo, edit, commit
    4. todo, edit, test, commit
    5. todo, test, edit, test, commit
    6. todo, test, edit, test, commit, tag

    7. todo, branch, test, edit, test, commit, { tag, push, send patch }
    8. todo, qnew, test, edit, test, commit, finish, { tag, push, send patch }


Python
-----------
| Wikipedia: `<https://en.wikipedia.org/wiki/Python_(programming_language)>`__
| Homepage: https://www.python.org/
| Source: https://hg.python.org/cpython

* http://docs.python.org/2/library/unittest.html
* http://docs.python.org/2/library/doctest.html
* http://wiki.python.org/moin/PythonTestingToolsTaxonomy
* https://pypi.python.org/pypi/unittest2
* http://docs.python-guide.org/en/latest/writing/tests/


IPython
----------------
| Wikipedia: https://en.wikipedia.org/wiki/IPython
| Homepage: http://ipython.org
| Source: https://github.com/ipython/ipython

* http://ipython.org/ipython-doc/dev/interactive/tips.html

::

    ?
    %edit?
    %edit -p
    %ed -p
    %logstart?
    %logstart log_input_to_here.py
    %logstart -o log_input_and_output_to_here.py

    %run nosetests
    !nosetests --help
    !nosetests --ipdb

    %doctest_mode?

    %nose # ipython_nose


IPython Blocks
~~~~~~~~~~~~~~~~

* https://github.com/jiffyclub/ipythonblocks
* http://nbviewer.ipython.org/urls/raw.github.com/jiffyclub/ipythonblocks/master/demos/ipythonblocks_animation.ipynb


Logging
=========

* https://en.wikipedia.org/wiki/Computer_data_logging
* https://en.wikipedia.org/wiki/Syslog
* http://docs.python.org/2/howto/logging.html
* http://docs.python.org/3/library/logging.config.html
* http://pythonhosted.org/Logbook/features.html
* https://structlog.readthedocs.org/en/latest/


Test-Driven Development (TDD)
================================
https://en.wikipedia.org/wiki/Test-driven_development


Behavior-Driven Development (BDD)
===================================
https://en.wikipedia.org/wiki/Behavior-driven_development

* http://pythonhosted.org/lettuce/
* http://pythonhosted.org/lettuce/tutorial/simple.html
* http://heynemann.github.io/pyvows/


Mocks
===========================
https://en.wikipedia.org/wiki/Mock_object

* http://mock.readthedocs.org/en/latest/index.html
* http://mock.readthedocs.org/en/latest/patch.html
* http://docs.python.org/3/library/unittest.mock.html


Test Runners
==============

Nose
--------------

* https://github.com/nose-devs/nose
* https://nose.readthedocs.org/en/latest/testing.html
* https://nose.readthedocs.org/en/latest/writing_tests.html
* https://github.com/taavi/ipython_nose
* https://github.com/flavioamieiro/nose-ipdb
* https://github.com/wolever/nose-parameterized


py.test
---------------

* https://bitbucket.org/hpk42/pytest
* http://pytest.org/latest/


GUI
---------------

* https://github.com/pybee/cricket
* See: `Debugging: GUI`_


Tox
----------------

* https://bitbucket.org/hpk42/tox
* http://tox.readthedocs.org/en/latest/



Continuous Integration (CI) and Continuous Delivery (CD)
=========================================================

* https://en.wikipedia.org/wiki/Continuous_integration
* https://en.wikipedia.org/wiki/Continuous_delivery
* https://en.wikipedia.org/wiki/Comparison_of_continuous_integration_software

* http://docs.python-guide.org/en/latest/scenarios/ci/


Buildbot
----------
| Wikipedia: https://en.wikipedia.org/wiki/Buildbot


Jenkins
--------
| Wikipedia: `<https://en.wikipedia.org/wiki/Jenkins_(software)>`__


Travis
--------
| Wikipedia: https://en.wikipedia.org/wiki/Travis_CI

* http://about.travis-ci.org/docs/user/getting-started/


Version Control
==================

Patches, Tags, Branches, Merging
------------------------------------

* https://en.wikipedia.org/wiki/ACID
* `<https://en.wikipedia.org/wiki/Patch_(computing)>`__
* `<https://en.wikipedia.org/wiki/Branching_(revision_control)>`__
* `<https://en.wikipedia.org/wiki/Merge_(revision_control)>`__
* https://en.wikipedia.org/wiki/Revision_control
* https://en.wikipedia.org/wiki/Distributed_revision_control
* http://savannah.nongnu.org/projects/quilt
* http://www.infoq.com/articles/agile-version-control
* http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging
* http://linux.die.net/man/7/guilt
* http://hgbook.red-bean.com/read/advanced-uses-of-mercurial-queues.html
* http://mercurial.selenic.com/wiki/Bookmarks


Bisect, Blame
----------------

* https://en.wikipedia.org/wiki/Code_Bisection
* https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html
* https://www.kernel.org/pub/software/scm/git/docs/git-blame.html
* http://git-scm.com/book/en/Git-Tools-Debugging-with-Git
* http://www.selenic.com/mercurial/hg.1.html#bisect
* http://www.selenic.com/mercurial/hg.1.html#annotate
* http://hgbook.red-bean.com/read/finding-and-fixing-mistakes.html#sec:undo:bisect


Debugging
===========

* https://en.wikipedia.org/wiki/Debugging
* https://en.wikipedia.org/wiki/Breakpoint
* https://en.wikipedia.org/wiki/Program_animation
* `<https://en.wikipedia.org/wiki/Tracing_(software)>`__
* https://en.wikipedia.org/wiki/Fault_injection
* https://en.wikipedia.org/wiki/Probe_effect


Debugging: Console, CLI, Terminal, REPL, IPython
-----------------------------------------------------
::

    import pdb; pdb.set_trace()

* http://docs.python.org/2/library/pdb.html
* http://docs.python.org/2/library/inspect.html
* http://docs.python.org/2/library/dis.html
* https://pypi.python.org/pypi/pudb
* https://github.com/gotcha/ipdb

Vim
~~~~~
* https://github.com/gotcha/vimpdb
* https://dev.launchpad.net/UltimateVimPythonSetup (F7 for `set_trace`)
* https://github.com/mattboehm/vim-unstack



Debugging: GUI
----------------

* http://winpdb.org/docs/
* https://github.com/lmacken/pyrasite-gui
* https://github.com/pybee/bugjar

IDEs
~~~~~
* http://wiki.python.org/moin/IntegratedDevelopmentEnvironments#IDEs_with_introspection-based_code_completion_and_integrated_debugger

* http://www.jetbrains.com/pycharm/features/index.html#debugger
* http://www.activestate.com/komodo-ide/features#debugging
* http://pythonhosted.org/spyder/debugging.html
* http://pydev.org/manual_adv_debugger.html
* https://wingware.com/doc/debug
* https://pytools.codeplex.com/



Debugging: Web
----------------

* http://werkzeug.pocoo.org/
* http://firelogger.binaryage.com#python
* See: `Web Frameworks`_



Advanced Debugging
--------------------

* https://github.com/tmetsch/python-dtrace
* https://github.com/lmacken/pyrasite
* https://github.com/lmacken/pyrasite-gui
* https://github.com/google/pyringe
* https://github.com/alonho/pytrace
* https://github.com/wyplay/pytracemalloc


Performance Instrumentation and Profiling
============================================

Profiling
----------
* `<https://en.wikipedia.org/wiki/Instrumentation_(computer_programming)>`__
* `<https://en.wikipedia.org/wiki/Profiling_(computer_programming)>`__
* https://en.wikipedia.org/wiki/Call_graph
* https://docs.python.org/2/library/profile.html
* https://github.com/tobami/codespeed/
* https://github.com/pydata/vbench
* https://github.com/amcfague/linesman
* https://github.com/bdarnell/plop
* http://firelogger.binaryage.com#python

Performance
-------------

* http://scikit-learn.org/dev/developers/performance.html


Databases
==========

Fixtures
----------------

* https://en.wikipedia.org/wiki/Test_fixture
* https://factoryboy.readthedocs.org/en/latest/orms.html
* https://docs.djangoproject.com/en/dev/topics/testing/overview/#topics-testing-fixtures
* http://farmdev.com/projects/fixture/


* https://pypi.python.org/pypi/tablib
* https://pypi.python.org/pypi/anyconfig


Schema Migrations
-------------------

* https://en.wikipedia.org/wiki/Schema_migration
* https://en.wikipedia.org/wiki/Database_refactoring
* https://en.wikipedia.org/wiki/Database_normalization

Django
~~~~~~~~
* https://docs.djangoproject.com/en/1.7/topics/migrations/
* https://south.readthedocs.org/en/latest/

SQLAlchemy
~~~~~~~~~~~
* https://sqlalchemy-migrate.readthedocs.org/en/latest/
* https://alembic.readthedocs.org/en/latest/


Web Frameworks
========================

https://en.wikipedia.org/wiki/Web_application_framework

Plone
------
* http://developer.plone.org/testing_and_debugging/

Django
--------
* https://docs.djangoproject.com/en/dev/topics/testing/
* https://docs.djangoproject.com/en/dev/topics/settings/
* https://github.com/django-debug-toolbar/django-debug-toolbar

Flask
------
* https://flask.readthedocs.org/en/latest/config/
* https://flask.pocoo.org/docs/testing/
* https://flask-debugtoolbar.readthedocs.org/en/latest/

Bottle
-------
* http://bottlepy.org/docs/dev/recipes.html#functional-testing-bottle-applications

Pyramid
--------
* http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/testing.html
* http://docs.pylonsproject.org/projects/pyramid/en/latest/api/testing.html
* http://docs.pylonsproject.org/projects/pyramid_debugtoolbar/en/latest/


Web Apps
===========

* http://www.reddit.com/r/Python/comments/1qnbq3/webscraping_selenium_vs_conventional_tools/cdeq2t7

WebTest
--------

* http://webtest.pythonpaste.org/en/latest/

Selenium
----------
* http://selenium.googlecode.com/svn/trunk/docs/api/py/index.html
* https://wiki.jenkins-ci.org/display/JENKINS/Selenium+Plugin
* http://www.seleniumhq.org/projects/ide/